// <auto-generated />
using System;
using CarDealershipApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarDealershipApp.Data.Migrations
{
    [DbContext(typeof(CarDealershipDbContext))]
    [Migration("20241211155754_DefaultUserAndCarsSeededAndUsersCarsEntityAdded")]
    partial class DefaultUserAndCarsSeededAndUsersCarsEntityAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarDealershipApp.Data.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://static.vecteezy.com/system/resources/thumbnails/020/927/378/small_2x/toyota-brand-logo-car-symbol-with-name-black-design-japan-automobile-illustration-free-vector.jpg",
                            IsDeleted = false,
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://e7.pngegg.com/pngimages/113/140/png-clipart-ford-motor-company-car-ford-f-series-ford-mondeo-auto-parts-emblem-logo-thumbnail.png",
                            IsDeleted = false,
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://i.pinimg.com/736x/d2/59/dc/d259dcd272a3ca9b538e68aedf721fb3.jpg",
                            IsDeleted = false,
                            Name = "Chevrolet"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTQRVqlZCGRqalei2z79Kc3CzWKWkvb9p1U0A&s",
                            IsDeleted = false,
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://uploads.audi-mediacenter.com/system/production/media/1282/images/bde751ee18fe149036c6b47d7595f6784f8901f8/AL090142_web_2880.jpg?1698171883",
                            IsDeleted = false,
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://thumbs.dreamstime.com/b/web-136350849.jpg",
                            IsDeleted = false,
                            Name = "Mercedes-Benz"
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/08/15/18/18/honda-1596081_640.png",
                            IsDeleted = false,
                            Name = "Honda"
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "https://wieck-nissanao-production.s3.amazonaws.com/photos/87dd7b734e373e65761492bd446b20efd0a56737/thumbnail-364x204.jpg",
                            IsDeleted = false,
                            Name = "Nissan"
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_bLDZ_uRSEueAUuNQjCnwIJKe7Ml71Kq66g&s",
                            IsDeleted = false,
                            Name = "Hyundai"
                        },
                        new
                        {
                            Id = 10,
                            ImageUrl = "https://static.vecteezy.com/system/resources/previews/020/500/396/non_2x/kia-logo-brand-symbol-black-design-south-korean-car-automobile-illustration-free-vector.jpg",
                            IsDeleted = false,
                            Name = "Kia"
                        });
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ListedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ModelId");

                    b.HasIndex("SellerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 2,
                            Description = "A reliable Toyota Corolla with excellent fuel efficiency.",
                            ImageUrls = "[\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRsKhK18-GZ4VQLvl5XkQ0KfV0tikZCdKAGOA\\u0026s\",\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRGBEBTWe0ZYNqPpTROzVSE0nWAd1tP1xgO8g\\u0026s\",\"https://di-uploads-pod12.dealerinspire.com/beavertoyotaofcumming/uploads/2019/02/Screen-Shot-2019-02-07-at-8.18.09-AM.png\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 45000,
                            ModelId = 1,
                            Price = 42000.50m,
                            ReleaseYear = 2020,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1400.5
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CategoryId = 3,
                            Description = "A stylish Ford Mustang with impressive performance.",
                            ImageUrls = "[\"https://www.mustangspecs.com/wp-content/uploads/2022/01/Race-Red-2022-Ford-Mustang-1-1400x933.webp\",\"https://www.prestonford.com/static/dealer-19389/PF-LPI-22Mustang-HERO.jpg\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 12000,
                            ModelId = 8,
                            Price = 65000.75m,
                            ReleaseYear = 2022,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1500.0
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            CategoryId = 1,
                            Description = "Chevrolet Impala with spacious interiors and smooth handling.",
                            ImageUrls = "[\"https://www.bluediamondgm.com/static/brand-chevrolet/vehicle/2019/Chevrolet/Impala/MRP/01.jpg\",\"https://www.martin-chevy.com/blogs/808/wp-content/uploads/2019/05/2019-Chevy-Impala-Crystal-Lake-IL.jpg\",\"https://cars.usnews.com/static/images/Auto/izmo/i92367443/2019_chevrolet_impala_dashboard.jpg\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 38000,
                            ModelId = 14,
                            Price = 48000.00m,
                            ReleaseYear = 2019,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1600.0
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 4,
                            CategoryId = 2,
                            Description = "BMW M3 with dynamic handling and advanced features.",
                            ImageUrls = "[\"https://cdn.motor1.com/images/mgl/o6xgE/s1/2021-bmw-m3-exterior.jpg\",\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSUjaHBP8n-W4k4UaMGF7uNuBrKtds8XBMUvQ\\u0026s\",\"https://cimg0.ibsrv.net/ibimg/hgm/1920x1080-1/100/762/2021-bmw-3-series_100762324.jpg\",\"https://cdn.bmwblog.com/wp-content/uploads/2020/09/2021-bmw-m3-competition-exterior-42.jpg\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 15000,
                            ModelId = 22,
                            Price = 82000.99m,
                            ReleaseYear = 2021,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1550.7
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 5,
                            CategoryId = 4,
                            Description = "Audi Q5 with a luxurious design and great performance.",
                            ImageUrls = "[\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTPoPhHOQ__Np_7IECuI1DWHEV-bE8Kym_XtQ\\u0026s\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 30000,
                            ModelId = 29,
                            Price = 62000.25m,
                            ReleaseYear = 2020,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1450.3
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 6,
                            CategoryId = 3,
                            Description = "Mercedes-Benz E-Class with premium comfort and safety.",
                            ImageUrls = "[\"https://s3.envato.com/files/350663522/preview%20image/2.jpg\",\"https://www.platinumautohaus.com/imagetag/14754/2/l/Used-2022-Mercedes-Benz-E-Class-E-350.jpg\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 18000,
                            ModelId = 33,
                            Price = 105000.75m,
                            ReleaseYear = 2022,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1700.0
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 7,
                            CategoryId = 1,
                            Description = "Honda Civic, an economical choice with modern features.",
                            ImageUrls = "[\"https://wallpapers.com/images/hd/honda-civic-pictures-1920-x-1080-20gy3dz4i08ofh3c.jpg\",\"https://di-uploads-pod6.dealerinspire.com/hondauniverse/uploads/2019/05/2019-Honda-Civic-Sedan-Interior-seating.jpg\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 40000,
                            ModelId = 38,
                            Price = 40000.00m,
                            ReleaseYear = 2019,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1400.0
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 8,
                            CategoryId = 4,
                            Description = "Nissan Rogue with great versatility and fuel economy.",
                            ImageUrls = "[\"https://blog.consumerguide.com/wp-content/uploads/sites/2/2020/02/Screen-Shot-2020-02-13-at-3.16.30-PM.png\",\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4S1VVSnengNt2tMXz9M0uVRYE5NNMTFdWbg\\u0026s\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 35000,
                            ModelId = 45,
                            Price = 45000.75m,
                            ReleaseYear = 2020,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1500.0
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 9,
                            CategoryId = 2,
                            Description = "Hyundai Santa Fe with a sleek design and excellent durability.",
                            ImageUrls = "[\"https://vicimus-glovebox7.s3.us-east-2.amazonaws.com/photos/FS0mAAjrxQqA/KM8S5DA14MU005124/000ca0b0b8ba8517cc5193473d18eafc.jpg\",\"https://di-uploads-pod27.dealerinspire.com/greghublerhyundai/uploads/2021/04/cd6Kwe9AvexQyFemXUFILTqq1ED6kIo8iXPSflx6.jpeg\",\"https://www.hyundaioman.com/content/dam/hyundai/template_en/en/images/find-a-car/pip/santa-fe-2021/interior/interior-color-3-original.png\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 32000,
                            ModelId = 49,
                            Price = 48000.99m,
                            ReleaseYear = 2021,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1480.5
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 10,
                            CategoryId = 3,
                            Description = "Kia Sportage with efficient performance and spacious interiors.",
                            ImageUrls = "[\"https://hips.hearstapps.com/hmg-prod/images/2021-kia-sportage-mmp-2-1601580481.jpg\",\"https://media.ed.edmunds-media.com/kia/sportage/2020/oem/2020_kia_sportage_4dr-suv_sx-turbo_fq_oem_1_1600.jpg\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 29000,
                            ModelId = 53,
                            Price = 43000.50m,
                            ReleaseYear = 2021,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1430.8
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 3,
                            CategoryId = 4,
                            Description = "Chevrolet Equinox with impressive handling and comfort.",
                            ImageUrls = "[\"https://www.carscoops.com/wp-content/uploads/2020/02/2021-Chevrolet-Equinox-1-1.jpg\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 25000,
                            ModelId = 17,
                            Price = 60000.00m,
                            ReleaseYear = 2021,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1600.0
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 1,
                            CategoryId = 2,
                            Description = "Toyota Land Cruiser with rugged capability and comfort.",
                            ImageUrls = "[\"https://i.pinimg.com/736x/45/84/82/458482adaacfa98fae14b7c1b3d9037d.jpg\",\"https://www.autopediame.com/storage/images/Toyota/Land%20Cruiser/Toyota-Land_Cruiser-2022-1024-0a.jpg\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 22000,
                            ModelId = 4,
                            Price = 85000.75m,
                            ReleaseYear = 2022,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1900.0
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 2,
                            CategoryId = 3,
                            Description = "Ford F-150 with outstanding towing and hauling capacity.",
                            ImageUrls = "[\"https://di-sitebuilder-assets.s3.amazonaws.com/Ford/MLP/f150/2023/color-Atlas-Blue.jpg\",\"https://www.ford.ca/is/image/content/dam/vdm_ford/live/en_ca/ford/nameplate/f-150commercial/2023/collections/dm/22_FRD_F15_49146_pk.tif?croppathe=1_3x2\\u0026wid=720\\u0026fit=crop\\u0026hei=480\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 12000,
                            ModelId = 9,
                            Price = 100000.00m,
                            ReleaseYear = 2023,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 2000.0
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 7,
                            CategoryId = 1,
                            Description = "Honda Accord, perfect balance of luxury and practicality.",
                            ImageUrls = "[\"https://www.accordxclub.com/attachments/b11e2328-e12a-4956-954c-a1ce55166603-jpeg.7159/\",\"https://dealerinspire-image-library-prod.s3.us-east-1.amazonaws.com/images/I12X3wbNlM3AoiU5oEXJR459Q7fPIRbtZIRxYGe6.jpg\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 50000,
                            ModelId = 39,
                            Price = 42000.25m,
                            ReleaseYear = 2018,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1350.0
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 9,
                            CategoryId = 3,
                            Description = "Hyundai Sonata with advanced safety features and great mileage.",
                            ImageUrls = "[\"https://www.zimbrickfishhatcheryroad.com/blogs/2133/wp-content/uploads/2019/07/2019-hyundai-sonata-fish-hatchery.jpg\",\"https://www.formulaimports.com/imagetag/3778/8/l/Used-2019-Hyundai-Sonata-SE-1720454838.jpg\"]",
                            IsDeleted = false,
                            ListedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mileage = 36000,
                            ModelId = 47,
                            Price = 46000.50m,
                            ReleaseYear = 2019,
                            SellerId = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            Weight = 1400.0
                        });
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.CarFeature", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.HasKey("CarId", "FeatureId");

                    b.HasIndex("FeatureId");

                    b.ToTable("CarsFeatures");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            FeatureId = 1
                        },
                        new
                        {
                            CarId = 1,
                            FeatureId = 2
                        },
                        new
                        {
                            CarId = 1,
                            FeatureId = 5
                        },
                        new
                        {
                            CarId = 2,
                            FeatureId = 3
                        },
                        new
                        {
                            CarId = 2,
                            FeatureId = 10
                        },
                        new
                        {
                            CarId = 2,
                            FeatureId = 15
                        },
                        new
                        {
                            CarId = 3,
                            FeatureId = 7
                        },
                        new
                        {
                            CarId = 3,
                            FeatureId = 20
                        },
                        new
                        {
                            CarId = 3,
                            FeatureId = 25
                        },
                        new
                        {
                            CarId = 4,
                            FeatureId = 8
                        },
                        new
                        {
                            CarId = 4,
                            FeatureId = 11
                        },
                        new
                        {
                            CarId = 4,
                            FeatureId = 31
                        },
                        new
                        {
                            CarId = 5,
                            FeatureId = 6
                        },
                        new
                        {
                            CarId = 5,
                            FeatureId = 13
                        },
                        new
                        {
                            CarId = 5,
                            FeatureId = 21
                        },
                        new
                        {
                            CarId = 6,
                            FeatureId = 9
                        },
                        new
                        {
                            CarId = 6,
                            FeatureId = 12
                        },
                        new
                        {
                            CarId = 6,
                            FeatureId = 13
                        },
                        new
                        {
                            CarId = 7,
                            FeatureId = 4
                        },
                        new
                        {
                            CarId = 7,
                            FeatureId = 17
                        },
                        new
                        {
                            CarId = 7,
                            FeatureId = 28
                        },
                        new
                        {
                            CarId = 8,
                            FeatureId = 5
                        },
                        new
                        {
                            CarId = 8,
                            FeatureId = 19
                        },
                        new
                        {
                            CarId = 8,
                            FeatureId = 26
                        },
                        new
                        {
                            CarId = 9,
                            FeatureId = 10
                        },
                        new
                        {
                            CarId = 9,
                            FeatureId = 15
                        },
                        new
                        {
                            CarId = 9,
                            FeatureId = 27
                        },
                        new
                        {
                            CarId = 10,
                            FeatureId = 2
                        },
                        new
                        {
                            CarId = 10,
                            FeatureId = 18
                        },
                        new
                        {
                            CarId = 10,
                            FeatureId = 24
                        },
                        new
                        {
                            CarId = 11,
                            FeatureId = 14
                        },
                        new
                        {
                            CarId = 11,
                            FeatureId = 20
                        },
                        new
                        {
                            CarId = 11,
                            FeatureId = 31
                        },
                        new
                        {
                            CarId = 12,
                            FeatureId = 16
                        },
                        new
                        {
                            CarId = 12,
                            FeatureId = 22
                        },
                        new
                        {
                            CarId = 12,
                            FeatureId = 30
                        },
                        new
                        {
                            CarId = 13,
                            FeatureId = 3
                        },
                        new
                        {
                            CarId = 13,
                            FeatureId = 15
                        },
                        new
                        {
                            CarId = 13,
                            FeatureId = 25
                        },
                        new
                        {
                            CarId = 14,
                            FeatureId = 4
                        },
                        new
                        {
                            CarId = 14,
                            FeatureId = 14
                        },
                        new
                        {
                            CarId = 14,
                            FeatureId = 23
                        },
                        new
                        {
                            CarId = 15,
                            FeatureId = 7
                        },
                        new
                        {
                            CarId = 15,
                            FeatureId = 17
                        },
                        new
                        {
                            CarId = 15,
                            FeatureId = 29
                        });
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sedan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SUV"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pickup Truck"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Wagon"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mini-Van"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Hatchback"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Convertible"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Coupé"
                        });
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sunroof"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Leather Seats"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Backup Camera"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bluetooth Connectivity"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Navigation System"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Blind Spot Monitoring"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Heated Seats"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Remote Start"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Parking Sensors"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Apple CarPlay"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Alloy Wheels"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Adaptive Cruise Control"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Power Liftgate"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Third-Row Seating"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Tow Package"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Keyless Entry"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Rain-Sensing Wipers"
                        },
                        new
                        {
                            Id = 18,
                            Name = "USB Charging Ports"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Smart Key Technology"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Rear Cross-Traffic Alert"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Wireless Phone Charging"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Surround Sound System"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Dynamic Traction Control"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Active Lane Keeping Assist"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Performance Exhaust System"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Adaptive Headlights"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Privacy Glass"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Dual-Zone Climate Control"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Fog Lights"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Ventilated Seats"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Android Auto"
                        });
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            IsDeleted = false,
                            Name = "Corolla"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            IsDeleted = false,
                            Name = "Camry"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            IsDeleted = false,
                            Name = "RAV4"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 1,
                            IsDeleted = false,
                            Name = "Land Cruiser"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 1,
                            IsDeleted = false,
                            Name = "Highlander"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 1,
                            IsDeleted = false,
                            Name = "Tacoma"
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 2,
                            IsDeleted = false,
                            Name = "Focus"
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 2,
                            IsDeleted = false,
                            Name = "Mustang"
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 2,
                            IsDeleted = false,
                            Name = "F-150"
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 2,
                            IsDeleted = false,
                            Name = "Explorer"
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 2,
                            IsDeleted = false,
                            Name = "Fusion"
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 2,
                            IsDeleted = false,
                            Name = "Edge"
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 3,
                            IsDeleted = false,
                            Name = "Malibu"
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 3,
                            IsDeleted = false,
                            Name = "Impala"
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 3,
                            IsDeleted = false,
                            Name = "Tahoe"
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 3,
                            IsDeleted = false,
                            Name = "Camaro"
                        },
                        new
                        {
                            Id = 17,
                            BrandId = 3,
                            IsDeleted = false,
                            Name = "Equinox"
                        },
                        new
                        {
                            Id = 18,
                            BrandId = 3,
                            IsDeleted = false,
                            Name = "Suburban"
                        },
                        new
                        {
                            Id = 20,
                            BrandId = 4,
                            IsDeleted = false,
                            Name = "3 Series"
                        },
                        new
                        {
                            Id = 21,
                            BrandId = 4,
                            IsDeleted = false,
                            Name = "X5"
                        },
                        new
                        {
                            Id = 22,
                            BrandId = 4,
                            IsDeleted = false,
                            Name = "M3"
                        },
                        new
                        {
                            Id = 23,
                            BrandId = 4,
                            IsDeleted = false,
                            Name = "5 Series"
                        },
                        new
                        {
                            Id = 24,
                            BrandId = 4,
                            IsDeleted = false,
                            Name = "X3"
                        },
                        new
                        {
                            Id = 25,
                            BrandId = 4,
                            IsDeleted = false,
                            Name = "7 Series"
                        },
                        new
                        {
                            Id = 26,
                            BrandId = 5,
                            IsDeleted = false,
                            Name = "A4"
                        },
                        new
                        {
                            Id = 27,
                            BrandId = 5,
                            IsDeleted = false,
                            Name = "Q7"
                        },
                        new
                        {
                            Id = 28,
                            BrandId = 5,
                            IsDeleted = false,
                            Name = "A6"
                        },
                        new
                        {
                            Id = 29,
                            BrandId = 5,
                            IsDeleted = false,
                            Name = "Q5"
                        },
                        new
                        {
                            Id = 30,
                            BrandId = 5,
                            IsDeleted = false,
                            Name = "A3"
                        },
                        new
                        {
                            Id = 31,
                            BrandId = 5,
                            IsDeleted = false,
                            Name = "Q3"
                        },
                        new
                        {
                            Id = 32,
                            BrandId = 6,
                            IsDeleted = false,
                            Name = "C-Class"
                        },
                        new
                        {
                            Id = 33,
                            BrandId = 6,
                            IsDeleted = false,
                            Name = "E-Class"
                        },
                        new
                        {
                            Id = 34,
                            BrandId = 6,
                            IsDeleted = false,
                            Name = "S-Class"
                        },
                        new
                        {
                            Id = 35,
                            BrandId = 6,
                            IsDeleted = false,
                            Name = "GLC"
                        },
                        new
                        {
                            Id = 36,
                            BrandId = 6,
                            IsDeleted = false,
                            Name = "A-Class"
                        },
                        new
                        {
                            Id = 37,
                            BrandId = 6,
                            IsDeleted = false,
                            Name = "GLA"
                        },
                        new
                        {
                            Id = 38,
                            BrandId = 7,
                            IsDeleted = false,
                            Name = "Civic"
                        },
                        new
                        {
                            Id = 39,
                            BrandId = 7,
                            IsDeleted = false,
                            Name = "Accord"
                        },
                        new
                        {
                            Id = 40,
                            BrandId = 7,
                            IsDeleted = false,
                            Name = "CR-V"
                        },
                        new
                        {
                            Id = 41,
                            BrandId = 7,
                            IsDeleted = false,
                            Name = "Pilot"
                        },
                        new
                        {
                            Id = 42,
                            BrandId = 8,
                            IsDeleted = false,
                            Name = "Altima"
                        },
                        new
                        {
                            Id = 43,
                            BrandId = 8,
                            IsDeleted = false,
                            Name = "Maxima"
                        },
                        new
                        {
                            Id = 44,
                            BrandId = 8,
                            IsDeleted = false,
                            Name = "Murano"
                        },
                        new
                        {
                            Id = 45,
                            BrandId = 8,
                            IsDeleted = false,
                            Name = "Rogue"
                        },
                        new
                        {
                            Id = 46,
                            BrandId = 9,
                            IsDeleted = false,
                            Name = "Elantra"
                        },
                        new
                        {
                            Id = 47,
                            BrandId = 9,
                            IsDeleted = false,
                            Name = "Sonata"
                        },
                        new
                        {
                            Id = 48,
                            BrandId = 9,
                            IsDeleted = false,
                            Name = "Tucson"
                        },
                        new
                        {
                            Id = 49,
                            BrandId = 9,
                            IsDeleted = false,
                            Name = "Santa Fe"
                        },
                        new
                        {
                            Id = 50,
                            BrandId = 10,
                            IsDeleted = false,
                            Name = "Forte"
                        },
                        new
                        {
                            Id = 51,
                            BrandId = 10,
                            IsDeleted = false,
                            Name = "Optima"
                        },
                        new
                        {
                            Id = 52,
                            BrandId = 10,
                            IsDeleted = false,
                            Name = "Sorento"
                        },
                        new
                        {
                            Id = 53,
                            BrandId = 10,
                            IsDeleted = false,
                            Name = "Sportage"
                        });
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.UserCar", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CarId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersCars");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "4e32b02a-046c-40be-bfeb-327c900e6bb9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c34a3505-9260-45d1-9b2c-d5e74c47798c",
                            Email = "default@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "DEFAULT@GMAIL.COM",
                            NormalizedUserName = "DEFAULT@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKoEod11N5fVkdAS/xuTLtLSDzVoDNmFsWYp1rLDGTwTS1aXNuQMt0WccWKcgSjpig==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4c903c26-5a86-4e75-9948-2e9905318ddb",
                            TwoFactorEnabled = false,
                            UserName = "default@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.Car", b =>
                {
                    b.HasOne("CarDealershipApp.Data.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarDealershipApp.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarDealershipApp.Data.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Model");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.CarFeature", b =>
                {
                    b.HasOne("CarDealershipApp.Data.Models.Car", "Car")
                        .WithMany("CarsFeatures")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CarDealershipApp.Data.Models.Feature", "Feature")
                        .WithMany("CarsFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.Model", b =>
                {
                    b.HasOne("CarDealershipApp.Data.Models.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.UserCar", b =>
                {
                    b.HasOne("CarDealershipApp.Data.Models.Car", "Car")
                        .WithMany("UsersCars")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.Car", b =>
                {
                    b.Navigation("CarsFeatures");

                    b.Navigation("UsersCars");
                });

            modelBuilder.Entity("CarDealershipApp.Data.Models.Feature", b =>
                {
                    b.Navigation("CarsFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
